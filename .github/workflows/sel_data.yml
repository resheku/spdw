name: sel data

on:
  workflow_run:
    workflows: ["sel"]
    types:
      - completed
  workflow_dispatch:
    inputs:
      force:
        description: 'Force commit'
        required: true
        default: false
        type: boolean
env:
  DATA_BRANCH: sel
  CODE_BRANCH: main
  DDB_VERSION: 1.3.2

jobs:
  process_data:
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.commit.outputs.changes }}
    permissions:
      contents: write
    steps:
      - name: checkout data branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.DATA_BRANCH }}
      - name: checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ env.CODE_BRANCH }}
          path: ${{ env.CODE_BRANCH }}
      - name: Cache DuckDB CLI
        id: cache-duckdb
        uses: actions/cache@v4
        with:
          path: ./duckdb_cli-linux-amd64-${{ env.DDB_VERSION }}.zip
          key: duckdb-cli-v${{ env.DDB_VERSION }}
      - name: Download DuckDB CLI if not cached
        if: steps.cache-duckdb.outputs.cache-hit != 'true'
        run: |
          curl -L --retry 3 --retry-delay 5 -o duckdb_cli-linux-amd64-${DDB_VERSION}.zip https://github.com/duckdb/duckdb/releases/download/v${DDB_VERSION}/duckdb_cli-linux-amd64.zip
      - name: Install DuckDB CLI
        run: |
          unzip -o duckdb_cli-linux-amd64-${DDB_VERSION}.zip
          chmod +x duckdb
          sudo mv duckdb /usr/local/bin/
      - name: Verify DuckDB install
        run: duckdb --version
      - name: data collect
        run: bash $CODE_BRANCH/scripts/data_collect.sh
      - name: data linkage
        run: python3 $CODE_BRANCH/sel_telemetry.py
      - name: create database sel.db
        run: rm -f sel.db && duckdb < $CODE_BRANCH/queries/sel_init.sql
      - name: data sel stats
        run: duckdb sel.db -f $CODE_BRANCH/queries/sel_stats.sql
      - name: data commit
        id: commit
        run: bash $CODE_BRANCH/scripts/data_commit.sh
        env:
          FORCE: ${{ github.event.inputs.force }}
      - name: trigger sel_db workflow
        if: steps.commit.outputs.changes == '1'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.repos.createDispatchEvent({
              owner: context.repo.owner,
              repo: context.repo.repo,
              event_type: 'sel_data_completed'
            });
      - name: data check
        run: duckdb sel.db -echo -column -f $CODE_BRANCH/queries/test.sql